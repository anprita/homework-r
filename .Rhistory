install.packages(c("bindr", "blob", "curl", "DBI", "hms", "lubridate", "openssl", "plogr", "Rcpp", "rmarkdown", "selectr", "stringi", "tidyselect", "withr", "yaml"))
install.packages(c("curl", "lubridate", "selectr"))
install.packages(c("curl", "lubridate", "selectr"))
install.packages("BayesFactor")
#load library
library(BayesFactor)
View(surveys_complete)
View(surveys_complete)
View(surveys_combined)
View(surveys_combined)
View(surveys_complete)
View(surveys_complete)
weight_control <- surveys_combined %>% filter(plot_type == 'Control')
weight_ltk_exclosure <- surveys_combined %>% filter(plot_type == 'Long-term Krat Exclosure')
weight_rodent_exclosure <- surveys_combined %>% filter(plot_type == 'Rodent Exclosure')
weight_stk__exclosure <- surveys_combined %>% filter(plot_type == 'Short-term Krat Exclosure')
weight_s__exclosure <- surveys_combined %>% filter(plot_type == 'Spectab exclosure')
#load library
library(tidyverse)
weight_control <- surveys_combined %>% filter(plot_type == 'Control')
weight_ltk_exclosure <- surveys_combined %>% filter(plot_type == 'Long-term Krat Exclosure')
weight_rodent_exclosure <- surveys_combined %>% filter(plot_type == 'Rodent Exclosure')
weight_stk__exclosure <- surveys_combined %>% filter(plot_type == 'Short-term Krat Exclosure')
weight_s__exclosure <- surveys_combined %>% filter(plot_type == 'Spectab exclosure')
View(weight_control)
View(weight_control)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined %>% filter(plot_type == 'Control' && plot_type == 'Long-term Krat Exclosure')
ggplot(weight_ltk_control, aes(x=weight_control$weight, y=weight_ltk_exclosure))
ggplot(weight_ltk_control, aes(x=weight_control$weight, y=weight_ltk_exclosure))
View(weight_ltk_control)
View(weight_ltk_control)
View(weight_control)
View(weight_control)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined %>% filter(plot_type == 'Control' or plot_type == 'Long-term Krat Exclosure')
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined %>% filter(plot_type == 'Control, Long-term Krat Exclosure')
View(weight_ltk_control)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined %>% filter(plot_type in 'Control, Long-term Krat Exclosure')
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined %>% filter(plot_type = 'Control' | plot_type = 'Long-term Krat Exclosure')
weight_control <- surveys_combined %>% filter(plot_type == 'Control')
weight_ltk_exclosure <- surveys_combined %>% filter(plot_type == 'Long-term Krat Exclosure')
weight_rodent_exclosure <- surveys_combined %>% filter(plot_type == 'Rodent Exclosure')
weight_stk__exclosure <- surveys_combined %>% filter(plot_type == 'Short-term Krat Exclosure')
weight_s__exclosure <- surveys_combined %>% filter(plot_type == 'Spectab exclosure')
ggplot(weight_ltk_control, aes(x=weight_control$weight, y=weight_ltk_exclosure))
View(weight_ltk_control)
compare_weight<- data.frame(weight_control,weight_ltk_exclosure)
#load library
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggplot2)
library(dbplyr)
library(RSQLite)
library(DBI)
#load data from combined.csv
surveys_combined <- read.csv("data/combined.csv")
weight_ltk_control <- surveys_combined %>% filter(plot_type = 'Control' | plot_type = 'Long-term Krat Exclosure')
weight_control <- surveys_combined %>% filter(plot_type == 'Control')
View(surveys_combined)
View(surveys_combined)
View(weight_control)
View(weight_control)
View(weight_control)
View(weight_control)
View(weight_control)
View(weight_control)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type = 'Control' | plot_type = 'Long-term Krat Exclosure')
weight_control <- surveys_combined_clear %>% filter(plot_type == 'Control')
weight_ltk_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Long-term Krat Exclosure')
weight_rodent_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Rodent Exclosure')
weight_stk__exclosure <- surveys_combined_clear %>% filter(plot_type == 'Short-term Krat Exclosure')
weight_s__exclosure <- surveys_combined_clear %>% filter(plot_type == 'Spectab exclosure')
surveys_combined <- read.csv("data/combined.csv")
#clear the NA / empty data from combined.csv
surveys_combined_clear<- surveys_combined %>% filter(!is.na(sex),
sex != "",
!is.na(hindfoot_length),
hindfoot_length != "",
!is.na(weight),
weight != "")
ggplot(surveys_combined_clear, aes(x=weight_control$weight, y=weight_ltk_exclosure))
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type = 'Control' | plot_type = 'Long-term Krat Exclosure')
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type == 'Control' | plot_type == 'Long-term Krat Exclosure')
View(weight_ltk_control)
View(weight_ltk_control)
ggplot(weight_ltk_control, aes(x=weight_control$weight, y=weight_ltk_exclosure$weight))
weight_ltk_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Long-term Krat Exclosure')
View(weight_ltk_control)
ggplot(weight_ltk_control, group_by(plot_type,weight), aes(x=[weight=plot_type, y=weight))
ggplot(weight_ltk_control, group_by(plot_type,weight), aes(x=plot_type, y=weight))
ggplot(weight_ltk_control, group_by(plot_type,weight), aes(color=plot_type, y=weight))
ggplot(surveys_combined_clear, aes(x=plot_type, y=weight))+
geom_boxplot()+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_boxplot()+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_point(size=2, shape=23)+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_point(size=2, shape=23)+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_point(size=2, shape=23)+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_point(size=2, shape=23)+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
ggplot(weight_ltk_control, aes(x=plot_type, y=weight))+
geom_point(size=2, shape=23)+xlab("plot type")+ylab("Weight (g)")
View(weight_control)
View(weight_control)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type == 'Control' | plot_type == 'Long-term Krat Exclosure') %>% select(weight)
#create variable to show weight in plot type : control
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type == 'Control' | plot_type == 'Long-term Krat Exclosure') %>% select(weight)
View(weight_ltk_control)
weight_ltk_control <- surveys_combined_clear %>% filter(plot_type == 'Control' | plot_type == 'Long-term Krat Exclosure')
weight_control <- surveys_combined_clear %>% filter(plot_type == 'Control') %>% select(weight)
weight_ltk_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Long-term Krat Exclosure') %>% select(weight)
weight_rodent_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Rodent Exclosure') %>% select(weight)
weight_stk__exclosure <- surveys_combined_clear %>% filter(plot_type == 'Short-term Krat Exclosure') %>% select(weight)
weight_s_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Spectab exclosure') %>% select(weight)
weight['control'] <- weight_control
weight['weight_ltk_exclosure'] <- weight_ltk_exclosure
weight['weight_rodent_exclosure'] <- weight_rodent_exclosure
weight['weight_s_exclosure'] <- weight_s_exclosure
weight[]
weight['control'] <- weight_control
weight['weight_ltk_exclosure'] <- weight_ltk_exclosure
weight['weight_rodent_exclosure'] <- weight_rodent_exclosure
weight['weight_s_exclosure'] <- weight_s_exclosure
weight <- matrix(c(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_s_exclosure ),ncol=4,byrow=TRUE)
colnames(weight) <- c("control","Long-term Krat Exclosure","Rodent Exclosure", "Short-term Krat Exclosure", "Spectab exclosure")
rownames(weight) <- c("current","former","never")
weight <- matrix(c(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_s_exclosure ),ncol=4,byrow=TRUE)
colnames(weight) <- c("control","Long-term Krat Exclosure","Rodent Exclosure", "Short-term Krat Exclosure", "Spectab exclosure")
weight <- paste(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_s_exclosure)
weight <- data.frame(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)
weight <- table(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)
table(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)
cc3 <- as.data.frame(table(unlist(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)))
cc3 <- as.data.frame(table(unlist(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)))
weight <- cbind(weight_control, weight_ltk_exclosure)
weight <- merge(weight_control, weight_ltk_exclosure)
View(weight)
View(weight)
weight <- join(weight_control, weight_ltk_exclosure)
### assign column name to the first column
colnames(pop_wide)[1] <- "Control"
weight = NULL
### assign column name to the first column
colnames(weight)[1] <- "Control"
weight <- weight_s_exclosure[1]
View(weight)
View(weight)
weight <- weight_control[1],weight_ltk_exclosure[2], weight_rodent_exclosure[3], weight_stk__exclosure[4], weight_s_exclosure[5]
weight <- weight_control[1]
weight <- weight_control["Contro"]
View(weight)
View(weight)
weight <- weight_control["Control"]
weight <- weight_control[1]
View(weight)
View(weight)
weight <- list(weight_control, weight_ltk_control)
View(weight)
View(weight)
weight <- vector(weight_control, weight_ltk_control)
weight <- unlist(weight_control, weight_ltk_control)
list
weight <- list(weight_control, weight_ltk_control)
View(weight)
View(weight)
weight <- list(weight_control, weight_s_exclosure)
### combine the year columns into a single column with separate rows for each year; assign to new vector
pop_long <- gather(pop_wide,year,population,-country)
weight <- list(weight_control, weight_s_exclosure)
View(weight)
View(weight)
weight <- list(weight_control, weight_s_exclosure)
View(weight)
View(weight)
weight <- list(weight_control, weight_ltk_exclosure, weight_rodent_exclosure, weight_stk__exclosure, weight_s_exclosure)
View(weight)
View(weight)
weight.plotype<- data.frame(weight, plot_type)
weight.plotype<- data.frame(surveys_combined_clear$weight, surveys_combined_clear$plot_type)
View(weight.plotype)
weight.plotype<- data.frame(weight= surveys_combined_clear$weight, plot_type = surveys_combined_clear$plot_type)
wg.control <- weight.plotype %>% filter (plot_type == "control")
wg.control <- weight.plotype %>% filter (plot_type == "Control")
View(wg.control)
wg.rodent <- weight.plotype %>% filter (plot_type == 'Rodent Exclosure')
View(wg.rodent)
temp <- left_join(weight_control, weight_ltk_exclosure)
View(temp)
?stat
ggplot(surveys_combined_clear)
fit<- lm(surveys_combined_clear$weight~surveys_combined_clear$hindfoot_length)
summary(fit)
wg<- ggscatter(data=surveys_combined_clear, x='year',y='weight', color ="plot_type",shape = "plot_type",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue","red","green","yellow","pink", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
wg + stat_cor(method = "pearson", label.x = 1995, label.y = 200)
sp <- ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 10, label.y = 200)
#load library
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggplot2)
library(dbplyr)
library(RSQLite)
library(DBI)
library(ggpubr)
#load data from combined.csv
surveys_combined <- read.csv("data/combined.csv")
#clear the NA / empty data from combined.csv
surveys_combined_clear<- surveys_combined %>% filter(!is.na(sex),
sex != "",
!is.na(hindfoot_length),
hindfoot_length != "",
!is.na(weight),
weight != "")
#Check the correlation between species id, the min, max and mean of species_id
surveys_hindfoot <- surveys_combined %>%
group_by(species_id, hindfoot_length) %>%
summarise(mean_w = mean(hindfoot_length),
min_w = min(hindfoot_length),
max_w = max(hindfoot_length))
#Clear the NA of hindfoot_Length, the min, max and mean
surveys_hindfoot %>% filter(!is.na(hindfoot_length))
#write surveys_combined.csv
write_csv(surveys_combined_clear, path = "data/output/surveys_combined.csv")
#connect to database portal_mammals.sqlite
mammal_db <- dbConnect(dbDriver("SQLite"), "data/portal_mammals.sqlite")
#get all the tables
tables <- dbListTables(mammal_db)
head(tables)
##make a query from surveys, plots, species where is not NA or empty
surveys_db <- dbGetQuery(mammal_db, "select surveys.*, species.species, species.taxa, species.genus,
plots.plot_type
from surveys, species, plots
where surveys.species_id = species.species_id
and surveys.plot_id = plots.plot_id
and surveys.sex <> 'NA'
and surveys.hindfoot_length <> 'NA'
and surveys.weight <> 'NA'
")
#write surveys_combined_db.csv
write_csv(surveys_db, path = "data/output/surveys_combined_db.csv")
#disconnect database portal_mammal
dbDisconnect(mammal_db)
#create distribution of 1 variable
#create histogram to show distribution of hindfoot_length
hist(surveys_combined_clear$hindfoot_length,
main="Histogram of Length", xlab ="Hindfoot Length")
#create boxplot to show distribution of hindfoot_length
boxplot(surveys_combined_clear$hindfoot_length,
main="Boxplot of Length", xlab ="Hindfoot Length")
#create histogram to show distribution of weight
hist(surveys_combined_clear$weight,
main="Distribution of Weight", xlab ="Weight")
#create histogram to show distribution of weight
hist(surveys_combined_clear$weight,
main="Distribution of Weight", xlab ="Weight")
# Scatter plot with correlation coefficient
#:::::::::::::::::::::::::::::::::::::::::::::::::
sp <- ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 10, label.y = 200)
# Extend the regression lines beyond the domain of the data
##weight changes over the year
wg<- ggscatter(data=surveys_combined_clear, x='year',y='weight', color ="plot_type",shape = "plot_type",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue","red","green","yellow","pink", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
wg + stat_cor(method = "pearson", label.x = 1995, label.y = 200)
# Extend the regression lines beyond the domain of the data
##hindfoot changes over the year
hd<- ggscatter(data=surveys_combined_clear, x='year',y='hindfoot_length', color ="plot_type",shape = "plot_type",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue","red","green","yellow","pink", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
hd + stat_cor(method = "pearson", label.x = 1995, label.y = 200)
#create line chart plot type per year
year_plot_type <- surveys_combined_clear %>% group_by(year, plot_type) %>% tally()
line_chart <- ggplot(year_plot_type, aes(x=year, y=n, color=plot_type)) +
geom_point() + xlab("Year") + ylab("Plot Type")
line_chart + stat_cor(method = "pearson", label.x = 1995, label.y = 900)
p <- ggplot(data = year_plot_type, aes(x = year, y = n, color =plot_type)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p + stat_cor(method = "pearson",aes(color = plot_type),label.sep = ", ", label.x = 1995, label.y = 900)
#create bar chart sex per year
year_sex <- surveys_combined_clear %>% group_by(year, sex) %>% tally()
bar_chart <- ggplot(year_sex, aes(x=year, y=n, color=sex)) +
geom_bar(stat="identity") + xlab("Year") + ylab("Sex")
#put chart to grid
timeseries_plot <- grid.arrange(bar_chart, line_chart, ncol=2, widths=c(4,6))
#save plot into image
ggsave("image/plot1.jpg", timeseries_plot, width=10, dpi=300)
#create boxplot chart weight per plot_type
boxplot_chart_weight <- ggplot(surveys_combined_clear, aes(x=plot_type, y=weight))+
geom_boxplot()+xlab("plot type")+ylab("Weight (g)") +  geom_jitter() +
scale_y_log10()
#create boxplot chart hindfoot length per plot_type
boxplot_chart_length <- ggplot(surveys_combined_clear, aes(x=plot_type, y=hindfoot_length))+
geom_boxplot()+xlab("plot type")+ylab("Length") + geom_jitter()
scale_y_log10()
#put chart to grid
frequency_plot <- grid.arrange(boxplot_chart_weight, boxplot_chart_length, ncol=2, widths=c(5,5))
#save plot into image
ggsave("image/plot2.jpg", frequency_plot, width=10, dpi=300)
#todo list
#find the correlation and p-value & R-square
#make RMarkup
sp <- ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 10, label.y = 200)
install.packages("ggpubr")
sp <- ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 10, label.y = 200)
library(ggpubr)
sp <- ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
) + stat_cor(method = "pearson", label.x = 10, label.y = 200)
ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
stat_cor(method = "pearson", label.x = 10, label.y = 300)
ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
) + stat_cor(method = "pearson", label.x = 10, label.y = 300)
ggplot(data = surveys_combined_clear) +
geom_point(mapping = aes(x=plot_type, y = weight))
ggscatter(surveys_combined_clear, x = "plot_type", y = "weight",title = "Relationship between weight and plot type", xlab = "Plot Type", ylab = "weight(g)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
) + stat_cor(method = "pearson", label.x = 10, label.y = 300)
ggscatter(surveys_combined_clear, x = "plot_type", y = "weight",title = "Relationship between weight and plot type", xlab = "Plot Type", ylab = "weight(g)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(surveys_combined_clear, x = "plot_type", y = "weight",title = "Relationship between weight and plot type", xlab = "Plot Type", ylab = "weight(g)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
ggscatter(surveys_combined_clear, x = "hindfoot_length", y = "weight",title = "Relationship between weight and hindfoot_length", xlab = "Hindfoot_length(mm)", ylab = "weight(gm)",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
) + stat_cor(method = "pearson", label.x = 10, label.y = 300)
mat=matrix(data=c(9,2,3,4,5,6),ncol=3)
View(mat)
View(mat)
View(mat)
weight_control <- surveys_combined_clear %>% filter(plot_type == 'Control') %>% select(weight)
weight_ltk_exclosure <- surveys_combined_clear %>% filter(plot_type == 'Long-term Krat Exclosure') %>% select(weight)
mat=matrix(data=c(weight_control, weight_ltk_exclosure),ncol=2)
View(mat)
View(mat)
mat$weight_control
l=list(control = weight_control, ltx_exclousure = weight_ltk_exclosure)
View(l)
View(l)
ldata = do.call(rbind.data.frame, l)
View(l)
View(l)
View(ldata)
View(ldata)
View(ldata)
library (plyr)
df <- ldply (l, data.frame)
ggplot(data = surveys_combined_clear) +
geom_point(mapping = aes(x=plot_type, y = weight))
View(df)
View(df)
View(frequency_plot)
View(frequency_plot)
View(df)
View(df)
mean_weight <- surveys_combined_clear %>% group_by(genus,plot_type) %>% summarise(mean_weight = round(mean(weight),digits=2))
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggplot2)
library(dbplyr)
library(RSQLite)
library(DBI)
library (plyr)
mean_weight <- surveys_combined_clear %>% group_by(genus,plot_type) %>% summarise(mean_weight = round(mean(weight),digits=2))
#load data from combined.csv
surveys_combined <- read.csv("data/combined.csv")
#clear the NA / empty data from combined.csv
surveys_combined_clear<- surveys_combined %>% filter(!is.na(sex),
sex != "",
!is.na(hindfoot_length),
hindfoot_length != "",
!is.na(weight),
weight != "")
mean_weight <- surveys_combined_clear %>% group_by(genus,plot_type) %>% summarise(mean_weight = round(mean(weight),digits=2))
View(mean_weight)
View(mean_weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type) %>% summarise(mean_weight = round(mean(weight),digits=2))
mean_weight <- surveys_combined_clear %>% group_by(plot_type) %>% summarise(mean_weight = round(mean(weight),digits=2))
View(mean_weight)
View(mean_weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type)
View(surveys_combined_clear)
View(surveys_combined_clear)
mean_weight <- surveys_combined_clear %>% group_by(plot_type, taxa)
View(mean_weight)
View(mean_weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type, genus)
View(mean_weight)
View(mean_weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type, genus) %>% summarise(mean_weight = round(mean(weight),digits=2))
mean_weight <- surveys_combined_clear %>% group_by(plot_type, genus) %>% summarise(mean_weight = round(mean(weight),digits=2))
View(mean_weight)
View(mean_weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type, genus) %>% select(plot_type, genus, specie_id, weight)
mean_weight <- surveys_combined_clear %>% group_by(plot_type, genus) %>%
select(plot_type, genus, species_id, weight)
View(mean_weight)
View(mean_weight)
#load library
library(tidyverse)
library(lubridate)
library(gridExtra)
library(ggplot2)
library(dbplyr)
library(RSQLite)
library(DBI)
#load data from combined.csv
surveys_combined <- read.csv("data/combined.csv")
#clear the NA / empty data from combined.csv
surveys_combined_clear<- surveys_combined %>% filter(!is.na(sex),
sex != "",
!is.na(hindfoot_length),
hindfoot_length != "",
!is.na(weight),
weight != "")
#write surveys_combined.csv
rattle()
library(rattle)
surveys_combined <- read.csv("data/combined.csv")
#clear the NA / empty data from combined.csv
surveys_combined_clear<- surveys_combined %>% filter(!is.na(sex),
sex != "",
!is.na(hindfoot_length),
hindfoot_length != "",
!is.na(weight),
weight != "")
rattle()
#write surveys_combined.csv
write_csv(surveys_combined_clear, path = "data/output/surveys_combined.csv")
